Мое понимание асинхронности и async/await


Асинхронность в программировании — это принцип, позволяющий выполнять операции без блокирования основного потока выполнения программы

Async и await — это синтаксическая конструкция, которая делает асинхронный код более читаемым и похожим на синхронный
Когда мы помечаем функцию ключевым словом async, мы по сути указываем что внутри неё можем использовать await 
Который позволяет приостановить выполнения  функции до получения какого-то результата от так званой асинхронной операции При этом не блокируя весь поток программы
И именно такой способ кардинально меняет способ обработки длительных операций, ведь по сути он нам позволяет писать код последовательно, но выполнять его параллельно


Чтобы прояснить это понятие для себя, я придумал аналогию с походом в ресторан
Когда я делаю какой-то заказ (вызываю асинхронную функцию), официант принимает его и уходит на кухню
Вместо того чтобы сидеть голодным и ничего не делать (блокирующая операция), я могу общаться с друзьями,
просматривать телефон или читать меню десертов (продолжать выполнение программы)
Ключевое слово await в этой аналогии — момент, когда официант возвращается с моим блюдом, и я прерываю разговор,для того чтобы поесть (обработать результат) 
Этот подход гораздо эффективнее, чем простое ожидание у стойки повара до готовности заказа


